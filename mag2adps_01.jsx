#target indesign////  Script convert Mag+ object > Adobe DPS object//  // (c) Yaroslav Bragin 2017//if (app.documents.length==0) {      alert("Нет открытых документов. Откройте нужный документ и запустите скрипт еще раз.");      exit();    }    var activeDoc = app.activeDocument;    var pageItems = activeDoc.pageItems;    var activeDocPach = (activeDoc.filePath.relativeURI + "");        activeDocPach = linkNormalize(activeDocPach);    var typeMedia = "media";    var typeHtml = "html";    var typeHotspot = "hotspot";    var typeSlideshow = "slideshow";    var typeBlock = "block";    var ColorNone = activeDoc.swatches.item("None");     var numMagPlusObjct = 0;    // -------------------------------------------    //    // медиа объекты (видео)  //делаем все видео на фуллскрин    //    //--------------------------------------------    var mediaArray = new Array;   // создаем массив из медиаобъектов, ссылок и ID    for (var i = 0; i < pageItems.length; i++) {      var pageItem = pageItems.item(i);      var magPlusObjType = pageItem.magplusObjectType;      if ( (checkVisible(pageItem)) ||  (checkBlock(magPlusObjType)) ) continue;            if (checkTypeMagPlusObject(magPlusObjType, typeMedia)) {            var linkCopyMagplusMedia = pageItem.magplusObjectType.magplusMediaUrl;            linkCopyMagplusMedia = linkNormalize(linkCopyMagplusMedia);            linkCopyMagplusMedia = activeDocPach+"/"+linkCopyMagplusMedia;                        var MediaMagplusID = pageItem.magplusObjectType.magplusMediaId;            var MediaMagplusRefId = pageItem.magplusObjectType.magplusMediaReferenceObjectId;            var MediaMagplusType = pageItem.magplusObjectType.magplusMediaContentType;            var MediaMagplusLoop = pageItem.magplusObjectType.magplusMediaLoop;                        pageItem.fillColor = ColorNone;              var newMovie = pageItem.place(File(linkCopyMagplusMedia))[0];            pageItem.insertLabel("kAdobeDPSInteractivity_Type","Video");               pageItem.insertLabel("kAdobeDPSInteractivity_PlayInline","false");            pageItem.insertLabel("kAdobeDPSInteractivity_ControlsByDefault","true");            if (MediaMagplusLoop) {              pageItem.insertLabel("kAdobeDPSInteractivity_HideWhenFinishedPlaying","true");            } else {              pageItem.insertLabel("kAdobeDPSInteractivity_HideWhenFinishedPlaying","false");}            pageItem.insertLabel("kAdobeDPSInteractivity_AutoStart", "false");                                var MediaMagplusID = pageItem.magplusObjectType.magplusMediaId;            var MediaMagplusRefId = pageItem.magplusObjectType.magplusMediaReferenceObjectId;            var idMediaForButton = newMovie.id;            mediaArray.push(MediaMagplusID, MediaMagplusRefId, idMediaForButton);          }    } // mainfor (var i = 0; i < pageItems.length; i++) {      var pageItem = pageItems.item(i);      var magPlusObjType = pageItem.magplusObjectType;    if ( (checkVisible(pageItem)) ||  (checkBlock(magPlusObjType)) ) continue;      // -------------------------------------------      //      // обработка хот-спотов      //      //--------------------------------------------    if (checkTypeMagPlusObject(magPlusObjType, typeHotspot)) {            // -------------------------------------------      // преобразуем маг-линк в кнопку с урл-ссылкой      //--------------------------------------------      if(pageItem.magplusObjectType.magplusHotspotType == MagplusHotspotTypes.link) {            var linkCopyMagplusHotspot = pageItem.magplusObjectType.magplusHotspotURL;            linkCopyMagplusHotspot = linkNormalize(linkCopyMagplusHotspot);            pageItem.fillColor = ColorNone;              var newButton = convertToButton(pageItem);            var newButtonBehavior = newButton.gotoURLBehaviors.add({url:linkCopyMagplusHotspot, enableBehavior:true});            // newButtonBehavior.url = ;            i--;          }      // -------------------------------------------      // преобразуем маг-джамплинк в кнопку с ссылкой      //--------------------------------------------      // в линках на др статьи режем ссылку на якоря (не поддерживается в DPS)      else if(pageItem.magplusObjectType.magplusHotspotType == MagplusHotspotTypes.jumplink) {            var jLinkCopyMagplusHotspot = pageItem.magplusObjectType.magplusHotspotURL;            jLinkCopyMagplusHotspot = linkNormalize(jLinkCopyMagplusHotspot);            jLinkCopyMagplusHotspot = jLinkNormalize(jLinkCopyMagplusHotspot);            newJLink = convertJLink(jLinkCopyMagplusHotspot);            newJLink = checkJLink(newJLink)            pageItem.fillColor = ColorNone;             var newButton = convertToButton(pageItem);            var newButtonBehavior = newButton.gotoURLBehaviors.add({url:newJLink, enableBehavior:true});            // newButtonBehavior.url = newJLink;            i--;          }    }      // -------------------------------------------      //      // обработка хтмл вставок      //      //--------------------------------------------    if (checkTypeMagPlusObject(magPlusObjType, typeHtml)) {        var linkCopyMagplusHtml = pageItem.magplusObjectType.magplusHtmlUrl;        linkCopyMagplusHtml = linkNormalize(linkCopyMagplusHtml);        linkCopyMagplusHtml = activeDocPach+"/"+linkCopyMagplusHtml;        pageItem.insertLabel("Type","Html");        pageItem.insertLabel("kAdobeDPSInteractivity_Type","WebView");        pageItem.insertLabel("kAdobeDPSInteractivity_URL",linkCopyMagplusHtml);        pageItem.insertLabel("kAdobeDPSInteractivity_UseTransparentBackground", "true");        pageItem.insertLabel("kAdobeDPSInteractivity_UserInteractionEnabled", "false");        pageItem.insertLabel("kAdobeDPSInteractivity_AutoStart", "true");              }      // -------------------------------------------      //      // обработка слайд-шоу      //      //--------------------------------------------    if (checkTypeMagPlusObject(magPlusObjType, typeSlideshow)) {        if ((pageItem.itemLayer == activeDoc.layers.item("B - Slides - main content") || pageItem.itemLayer.name == "A - Main Tower - for inline body content")) {          pageItem.insertLabel("kAdobeDPSInteractivity_Type", "Slideshow");          pageItem.insertLabel("kAdobeDPSInteractivity_ContainerAssetFormat", "pdf");          pageItem.insertLabel("kAdobeDPSInteractivity_SwipeEnabled", "true");          pageItem.insertLabel("kAdobeDPSInteractivity_SwipeStop", "true");          pageItem.insertLabel("kAdobeDPSInteractivity_CrossFadeImages", "true");          pageItem.insertLabel("kAdobeDPSInteractivity_CrossFadeImagesDelay", "0.5");        }      }      // -------------------------------------------      //      // панорамные объекты      //      //--------------------------------------------    if ((checkTypeMagPlusObject(magPlusObjType, typeBlock)) && (magPlusObjType.magplusBlockPan == true)) {          pageItem.insertLabel("kAdobeDPSInteractivity_Type","WebView");          pageItem.insertLabel("kAdobeDPSInteractivity_ContainerAssetFormat", "pdf");          pageItem.insertLabel("kAdobeDPSInteractivity_WebViewOverlayContainer", "true");          var selectNestObj = pageItem.allPageItems;          var coordNestObj = selectNestObj[0].geometricBounds;          var widthNestObj = (coordNestObj[3] - coordNestObj[1]);          var heightNestObj = (coordNestObj[2] - coordNestObj[0]);                          if (widthNestObj > heightNestObj)                 {pageItem.insertLabel("kAdobeDPSInteractivity_ScrollDirection", "3");}          else  {pageItem.insertLabel("kAdobeDPSInteractivity_ScrollDirection", "2");}          pageItem.insertLabel("kAdobeDPSInteractivity_UseInitialDesignView", "true");          pageItem.insertLabel("kAdobeDPSInteractivity_ShowScrollIndicators", "false");              }} // end main      // -------------------------------------------      // преобразуем маг-медиа кнопки       //--------------------------------------------for (var i = 0; i < pageItems.length; i++) {      var pageItem = pageItems.item(i);      var magPlusObjType = pageItem.magplusObjectType;    if ( (checkVisible(pageItem)) || (checkBlock(magPlusObjType)) ) continue;    if (checkTypeMagPlusObject(magPlusObjType, typeHotspot)) {       if(pageItem.magplusObjectType.magplusHotspotType == MagplusHotspotTypes.media) {            pageItem.fillColor = ColorNone;            var linkMediaMagplusHotspot = pageItem.magplusObjectType.magplusHotspotURL;            var idMediaButton;            for (var i = 0; i < (mediaArray.length); i += 3) {              if (linkMediaMagplusHotspot = mediaArray[i+1]) {                idMediaButton = mediaArray[i+2];              }            }            var newButton = convertToButton(pageItem);            var newButtonBehavior = newButton.movieBehaviors.add({                movieItem:pageItem.movies.itemByID(idMediaButton),                behaviorEvent:BehaviorEvents.mouseUp,                 operation:MoviePlayOperations.play});             i--;        }    }}    // -------------------------------------------    //    // popup объекты  =>  объекты состояний    //    //--------------------------------------------  var popupArray = new Array;       for (var i = 0; i < pageItems.length; i++) {      var pageItem = pageItems.item(i);      var magPlusObjType = pageItem.magplusObjectType;      if ( (checkVisible(pageItem)) || (checkBlock(magPlusObjType)) ) continue;      if ( checkPopupLayers(magPlusObjType) ) continue;      var isPopup = magPlusObjType.magplusIsPopup;            if (isPopup) {       var popupObjGroup = pageItem.magplusObjectType.magplusPopup.magplusPopupRadioGroup;        if (popupObjGroup) {          popupArray.push(popupObjGroup);        } else if ((pageItem.itemLayer.name == "Bp - Popup - main content") || (pageItem.itemLayer.name == "Ap - Popup - Main Tower")) {            if ( (checkTypeMagPlusObject(magPlusObjType, typeSlideshow)) || (checkTypeMagPlusObject(magPlusObjType, typeHotspot)) ) {              continue;            }           var popupObjId = pageItem.magplusObjectType.magplusBlockObjectId;          convertToMSO(popupObjId);        }      }  }    var uniqueGroupItems = uniqueGroup(popupArray); // выборка групп    for (var i = 0; i < uniqueGroupItems.length; i++) {      convertGroupToMSO(uniqueGroupItems[i]);    }    // Сохранение в новый файл    var f = new File(activeDoc.filePath+"//"+"_objConv_"+activeDoc.name); //слеш правильно - важно    activeDoc.save(f);    alert("Документ сохранен в \"" + f.fsName + "\"");    // alert("end convert");//////////////////////////     Функции    ////////////////////////function checkVisible(pageItem) {      if (pageItem.visible == false || pageItem.itemLayer.visible == false || pageItem.itemLayer.name == "Guides"  || pageItem.itemLayer.name == "B - Slides - pinned blocks" || pageItem.itemLayer.name == "Device landscape" || pageItem.itemLayer.name == "Device portrait" || pageItem.itemLayer.name == "Device bezel" || pageItem.itemLayer.name == "Transition guides - place at position where slides transition") {        return true;      }}function checkBlock(magPlusObjType) {      if (magPlusObjType.magplusObjectTypeEnum == MagplusObjectTypes.none) {        return true;      }}function checkTypeMagPlusObject(magPlusObjType, type) {            var magType;              switch(type) {        case "media":        magType = MagplusObjectTypes.media;        break;        case "html":        magType = MagplusObjectTypes.html;        break;        case "hotspot":        magType = MagplusObjectTypes.hotspot;        break;        case "hotspot":        magType = MagplusObjectTypes.slideshow;        break;      }      if (magPlusObjType.magplusObjectTypeEnum == magType) {        return true;      }}function checkPopupLayers(pageItem) {  if ( (pageItem.itemLayer.name == "Ap - Popup - Main Tower")  || (pageItem.itemLayer.name == "Bp - Popup - main content") ) {    return false;  } }function uniqueGroup(arr) {  var result = [];  nextInput:    for (var i = 0; i < arr.length; i+=3) {      var str = arr[i]; // для каждого элемента      for (var j = 0; j < result.length; j++) { // ищем, был ли он уже?        if (result[j] == str) continue nextInput; // если да, то следующий      }      result.push(str);    }  return result;}function convertToButton(obj) {    app.selection = [obj];  var maCreateButton = app.menuActions.item('$ID/$$$/Dialog/CmdName/CreateButton'), ret;  if (!maCreateButton.isValid) return false;  maCreateButton.invoke();  ret = app.selection[0];  return ret;}function linkNormalize(link) {    link = link.replace(/%20/g, " ");    link = link.replace(/%3A/g, ":");    link = link.replace(/%2F/g, "/");    link = link.replace(/%3F/g, "?");    link = link.replace(/%3D/g, "=");    link = link.replace(/%24/g, "$");    link = link.replace(/%26/g, "&");    link = link.replace(/%23/g, "#");     link = link.replace(/%2B/g, "+");     link = link.replace(/%40/g, "@");     return link;}function jLinkNormalize(jlink) {    jlink = jlink.replace(/\//g, "#");    jlink = jlink.replace("##", "//");    return jlink;}function convertJLink (jlink) {    jlink = jlink.replace("jump", "navto");    return jlink;}function convertPLink (plink) {    plink = plink.replace("popup://", "");     return plink;}function checkJLink (jlink) {  if (/\$current/.test(jlink)) {  //  если содержит ссылки на стр внутри статьи    jlink = jlink.replace("$current", "relative/current");    jlink = jlink.replace("_0", "");    add = jlink.split(/#/g);    for (var i = 0; i < add[1].length; i++) {        jlink = jlink.replace(/#[a-z]/gi, "#");    }    return jlink;  } else if (/page/.test(jlink)) {   // если содержит ссылки на др статью со страницами    add = jlink.split(/#/g);    for (var i = 0; i < add[1].length; i++) {        jlink = jlink.replace(/#[a-zA-Z]/g, "#");        jlink = jlink.replace(/#0/g, "#");     }    return jlink;  } else {  // если содержит ссылку на другую статью с якорями (режем якоря)    add = jlink.split(/#/g);    for (var i = 0; i < add[1].length; i++) {        jlink = jlink.replace(/#[a-zA-Z0-9]/g, "#");    }    jlink = jlink.replace(/#/g, "");    return jlink;  }}function convertToMSO(popupObjAddId) {  var popupObjAddId = popupObjAddId;  var singleMSO;  for (var j = 0; j < activeDoc.pages.length; j++){    var currentPage = activeDoc.pages.item(j);    for (var i = 0; i < currentPage.pageItems.length; i++) {      var pageItem = currentPage.pageItems.item(i);      var magPlusObjType = pageItem.magplusObjectType;      if ( (checkVisible(pageItem)) || (checkBlock(magPlusObjType)) ) continue;      if ( checkPopupLayers(pageItem) ) continue;                var isPopup = magPlusObjType.magplusIsPopup;         if (isPopup) {           var popupObjId = pageItem.magplusObjectType.magplusBlockObjectId;            if ((popupObjId == popupObjAddId)) {              var newGeometricBounds = pageItem.geometricBounds;              var singleMSO = currentPage.multiStateObjects.add({name: popupObjId, geometricBounds: newGeometricBounds});                  singleMSO.addItemsAsState(pageItem);                  singleMSO.states.item(2).name = popupObjId;                  singleMSO.states.firstItem().remove();                  singleMSO.states.firstItem().name = ("0_" + popupObjId);                  pageItem.insertLabel("kAdobeDPSInteractivity_Type", "Slideshow");                  pageItem.insertLabel("kAdobeDPSInteractivity_ContainerAssetFormat", "pdf");                  pageItem.insertLabel("kAdobeDPSInteractivity_SwipeEnabled", "false");                  pageItem.insertLabel("kAdobeDPSInteractivity_SwipeStop", "true");                  pageItem.insertLabel("kAdobeDPSInteractivity_CrossFadeImages", "true");                  pageItem.insertLabel("kAdobeDPSInteractivity_CrossFadeImagesDelay", "0.2");                  addButtonControlSingleMSO(popupObjAddId, singleMSO, currentPage);                  return;            }         }    }  }}function addButtonControlSingleMSO(popupObjAddId, singleMSO, currentPage) {  var currentPage = currentPage;  var singleMSO = singleMSO;  var popupObjAddId = popupObjAddId;  for (var i = 0; i < currentPage.pageItems.length; i++) {      var pageItem = currentPage.pageItems.item(i);      var magPlusObjType = pageItem.magplusObjectType;      if ( (checkVisible(pageItem)) || (checkBlock(magPlusObjType)) ) continue;      if (pageItem.itemLayer.name == "C - Clickable Areas" ) {      if (checkTypeMagPlusObject(magPlusObjType, typeHotspot)) {       if (pageItem.magplusObjectType.magplusHotspotType == MagplusHotspotTypes.popup) {          var linkPopupMagplusHotspot = pageItem.magplusObjectType.magplusHotspotURL;          var linkPopupMagplusHotspot = linkNormalize(linkPopupMagplusHotspot);          var linkPopupMagplusHotspot = convertPLink(linkPopupMagplusHotspot);                if (linkPopupMagplusHotspot == popupObjAddId) {              var newGeometricBounds = pageItem.geometricBounds;              var myButton = currentPage.buttons.add({geometricBounds: newGeometricBounds});              var myClickState = myButton.states.add();              var myNextStateBehavior =              myButton.gotoNextStateBehaviors.add({associatedMultiStateObject:singleMSO,              behaviorEvent:BehaviorEvents.mouseUp, enableBehavior:true,              loopsToNextOrPrevious:true});              myButton.itemLayer = activeDoc.layers.item("C - Clickable Areas");              pageItem.fillColor = ColorNone;                        }        }      }    }  }}function convertGroupToMSO(groupID) {  var groupID = groupID;  var checkCreateMSO = false;  var myMSO;  var countAddState = 3;  var forButtonId = new Array;    for (var j = 0; j < activeDoc.pages.length; j++){      var currentPage = activeDoc.pages.item(j);      for (var i = 0; i < currentPage.pageItems.length; i++) {        var pageItem = currentPage.pageItems.item(i);        var magPlusObjType = pageItem.magplusObjectType;      if ( (checkVisible(pageItem)) || (checkBlock(magPlusObjType)) ) continue;      if ( checkPopupLayers(pageItem) ) continue;            var isPopup = magPlusObjType.magplusIsPopup;            if (isPopup) {       var popupObjGroup = pageItem.magplusObjectType.magplusPopup.magplusPopupRadioGroup;        if (popupObjGroup == groupID) {            var popupObjId = pageItem.magplusObjectType.magplusBlockObjectId;            forButtonId.push(popupObjId);          if (!checkCreateMSO) {              var myMSO = currentPage.multiStateObjects.add({name: popupObjGroup});              var checkCreateMSO = true;              myMSO.addItemsAsState(pageItem);              myMSO.states.item(2).name = popupObjId;              i--;          } else {  myMSO.addItemsAsState(pageItem);                    myMSO.states.item(countAddState).name = popupObjId;                    countAddState++;                    i--;                  }                   pageItem.insertLabel("kAdobeDPSInteractivity_Type", "Slideshow");                  pageItem.insertLabel("kAdobeDPSInteractivity_ContainerAssetFormat", "pdf");                  pageItem.insertLabel("kAdobeDPSInteractivity_SwipeEnabled", "false");                  pageItem.insertLabel("kAdobeDPSInteractivity_SwipeStop", "true");                  pageItem.insertLabel("kAdobeDPSInteractivity_CrossFadeImages", "true");                  pageItem.insertLabel("kAdobeDPSInteractivity_CrossFadeImagesDelay", "0.2");          addButtonControlGroupMSO(currentPage, myMSO, forButtonId);                       }      }      }    }    myMSO.states.firstItem().remove();    myMSO.states.firstItem().remove();}function addButtonControlGroupMSO(currentPage, myMSO, forButtonId) {    var currentPage = currentPage;  var myMSO = myMSO;  var forButtonId = forButtonId;  for (var j = 0; j < currentPage.pageItems.length; j++) {      var pageItem = currentPage.pageItems.item(j);      var magPlusObjType = pageItem.magplusObjectType;      if ( (checkVisible(pageItem)) || (checkBlock(magPlusObjType)) ) continue;          if (pageItem.itemLayer.name == "C - Clickable Areas" ) {               if (checkTypeMagPlusObject(magPlusObjType, typeHotspot)) {       if (pageItem.magplusObjectType.magplusHotspotType == MagplusHotspotTypes.popup) {          var linkPopupMagplusHotspot = pageItem.magplusObjectType.magplusHotspotURL;          var linkPopupMagplusHotspot = linkNormalize(linkPopupMagplusHotspot);          var linkPopupMagplusHotspot = convertPLink(linkPopupMagplusHotspot);          for (var i = 0; i < forButtonId.length; i++) {                if (linkPopupMagplusHotspot == forButtonId[i]) {              var newGeometricBounds = pageItem.geometricBounds;              var myButton = currentPage.buttons.add({geometricBounds: newGeometricBounds});              var myClickState = myButton.states.add();              var myStateBehavior =              myButton.gotoStateBehaviors.add( {associatedMultiStateObject:myMSO, behaviorEvent:BehaviorEvents.mouseUp,               enableBehavior:true, stateName:linkPopupMagplusHotspot});              myButton.itemLayer = activeDoc.layers.item("C - Clickable Areas");              pageItem.fillColor = ColorNone;                        }          }        }      }    }  }}      